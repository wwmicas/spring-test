<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 配置Cluster -->
    <!--<bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <constructor-arg>
            <bean class="org.springframework.core.env.MapPropertySource">
                <constructor-arg index="0" value="RedisClusterConfiguration"/>
                <constructor-arg index="1">
                    <map>
                        <entry key="spring.redis.cluster.nodes" value="${redis.cluster.nodes}"/>
                        <entry key="spring.redis.cluster.max-redirects" value="${redis.cluster.max-redirects}"/>
                        <entry key="spring.redis.cluster.timeout" value="${redis.cluster.timeout}"/>
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="clusterJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1000" />
        <property name="maxIdle" value="100" />
        <property name="maxWaitMillis" value="3000" />
        <property name="testOnBorrow" value="true" />
    </bean>

    <bean id="clusterJedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="redisClusterConfiguration" />
        <constructor-arg ref="clusterJedisPoolConfig" />
    </bean>

    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    <bean id="clusterRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="clusterJedisConnectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="stringRedisSerializer"/>
    </bean>-->


    <!-- 配置的一套集群redis -->
    <bean id="testExclusiveRedisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <constructor-arg>
            <bean class="org.springframework.core.env.MapPropertySource">
                <constructor-arg index="0" value="RedisClusterConfiguration" />
                <constructor-arg index="1">
                    <map>
                        <entry key="spring.redis.cluster.nodes" value="${redis.Exclusive.cluster.nodes}" />
                        <entry key="spring.redis.cluster.max-redirects" value="${redis.Exclusive.cluster.max-redirects}" />
                        <entry key="spring.redis.cluster.timeout" value="${redis.Exclusive.cluster.timeout}" />
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
    <bean id="testExclusiveClusterJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.Exclusive.cluster.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.Exclusive.cluster.pool.maxIdle}" />
        <!--<property name="maxWaitMillis" value="${redis.cpdExclusive.cluster.pool.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.cpdExclusive.cluster.pool.testOnBorrow}" />-->
    </bean>
    <bean id="testExclusiveClusterRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory">
            <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
                <constructor-arg ref="testExclusiveRedisClusterConfiguration" />
                <constructor-arg ref="testExclusiveClusterJedisPoolConfig" />
            </bean>
        </property>
    </bean>




    <!-- 连接池配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="30" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="1024" />
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="30000" />
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="1800000" />
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000" />
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="1500" />
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <!--<property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true" />
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false" />
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>



</beans>
